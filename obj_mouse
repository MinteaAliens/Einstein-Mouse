||| C R E A T E |||

/// @description mouse

movement_speed = 8;
follow = false;
squishy = 1;
squash = false;
counter = 0;
previous_tile = collision_point(x,y,obj_maze,false,true);
new_tile = collision_point(x,y,obj_maze,false,true);
value = scr_minDistance(global.tile_path);
game_finish = false;
win = true;

---------------------------------------------------------------------------------

||| S T E P |||

/// @description Insert description here
// You can write your code in this editor
movement_speed = 8;

var mouse_pressed = mouse_check_button(mb_right);
var hovering = (mouse_x > bbox_left && 
mouse_x < bbox_right &&
mouse_y > bbox_top &&
mouse_y < bbox_bottom);
if (global.MODE = MAP_MODE.CREATION){
	global.tile_path[((x-32)/64)+1, ((y-32)/64)+1] = "0";
	if (mouse_pressed && hovering){
		follow = true;
	}
	if (!mouse_pressed){
		follow = false;
	}
	if (follow){
		var tile = collision_point(mouse_x, mouse_y, obj_wall, false, true);
		if (tile != noone){
			x = tile.x;
			y = tile.y;
		}
	}
	global.tile_path[((x-32)/64)+1, ((y-32)/64)+1] = "s";
}
if (global.MODE = MAP_MODE.MOUSE){
	var w = keyboard_check(ord("W"));
	var a = keyboard_check(ord("A"));
	var s = keyboard_check(ord("S"));
	var d = keyboard_check(ord("D"));
	
	var horizontal_movement = 0;
	var vertical_movement = 0;
	
	if (w){
		vertical_movement = -1;
	}
	if (a){
		horizontal_movement = -1;
	}
	if (s){
		vertical_movement = 1;
	}
	if (d){
		horizontal_movement = 1;
	}
	
	if (horizontal_movement != 0 && vertical_movement != 0){
		movement_speed *= cos(degtorad(45));
	}
	
	horizontal_movement *= movement_speed;
	vertical_movement *= movement_speed;
	
	var temp_tile1 = collision_point(x+horizontal_movement, y, obj_maze, false, true);
	var temp_tile2 = collision_point(x, y+vertical_movement, obj_maze, false, true);
	if ((temp_tile1)){
		x += horizontal_movement;
	}
	if ((temp_tile2)){
		y += vertical_movement;
	}
	
	new_tile = collision_point(x,y,obj_maze,false,true);
	if (new_tile != previous_tile){
		counter++;
	}
	
	if (horizontal_movement > 0){
		image_index = 0;
	}
	else if (horizontal_movement < 0){
		image_index = 2;
	}
	else if (vertical_movement > 0){
		image_index = 1;
	}
	else if (vertical_movement < 0){
		image_index = 3;
	}
	
	if (horizontal_movement != 0 || vertical_movement != 0){ //make the mouse throb as it moves
		if (squash){
			if (squishy < 1){
				squishy += 0.1;
			}
			else{
				squishy = 1;
				squash = false;
			}
		}
		else{
			if (squishy > 0.8){
				squishy -= 0.1;
			}
			else{
				squishy = 0.8;
				squash = true;
			}
		}
	}
	else{
		squishy = 1;
	}
	image_xscale = squishy;
	previous_tile = collision_point(x,y,obj_maze,false,true);
}

if (collision_point(x,y,obj_house, false, true) && alarm[0] == -1 && !game_finish){
	alarm[0] = 25;
}

---------------------------------------------------------------------------------

||| D R A W |||

/// @description Insert description here
// You can write your code in this editor
draw_set_color(c_white);
draw_set_font(font_default);
draw_set_halign(fa_left);
draw_set_valign(fa_middle);

draw_text(32,64,counter);

draw_self();

if (game_finish){
	if (win){
		draw_sprite(spr_youWin, 0, 512, 512);
	}
	else{
		draw_sprite(spr_youLose, 0, 512, 512);
	}
}

---------------------------------------------------------------------------------

||| A L A R M 0 |||

if (counter > value){
	win = false;
}
game_finish = true;
